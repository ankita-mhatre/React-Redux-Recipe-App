{"ast":null,"code":"var _jsxFileName = \"/Users/tink/netninja-react/poketimes/src/components/Post.js\";\nimport React, { Component } from 'react'; // import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nclass Post extends Component {\n  // state = {\n  // post: null\n  // }\n  // componentDidMount(){\n  //     let id = this.props.match.params.post_id;\n  //     axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\n  //       .then(res => {\n  //         this.setState({\n  //           post: res.data\n  //         });\n  //         //console.log(res.data);\n  //       });\n  //   }\n  render() {\n    console.log(this.props);\n    const post = this.props.post ? React.createElement(\"div\", {\n      className: \"post center title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.post.body)) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Loading Post\");\n    return React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, post);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.post_id;\n  return {\n    post: state.posts.find(post => post.id === id)\n  };\n}; // to change state from component  \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deletePost: id => {\n      dispatch({\n        type: 'DELETE_POST',\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","map":{"version":3,"sources":["/Users/tink/netninja-react/poketimes/src/components/Post.js"],"names":["React","Component","connect","Post","render","console","log","props","post","title","body","mapStateToProps","state","ownProps","id","match","params","post_id","posts","find","mapDispatchToProps","dispatch","deletePost","type"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,EAAAA,MAAM,GAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEA,UAAMC,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,GACT;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAxC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,IAApB,CAFJ,CADS,GAMT;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAQA,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IADL,CADJ;AAKH;;AA9BwB;;AAgC7B,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,OAA/B;AACA,SAAO;AACHT,IAAAA,IAAI,EAAEI,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAiBX,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAArC;AADH,GAAP;AAGH,CALD,C,CAMA;;;AACA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,UAAU,EAAGR,EAAD,IAAQ;AAAEO,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,aAAP;AAAsBT,QAAAA,EAAE,EAAEA;AAA1B,OAAD,CAAR;AAAwC;AAD3D,GAAP;AAGH,CAJD;;AAKA,eAAeZ,OAAO,CAACS,eAAD,EAAiBS,kBAAjB,CAAP,CAA4CjB,IAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\n// import axios from 'axios';\nimport { connect } from 'react-redux'\nclass Post extends Component {\n    // state = {\n    // post: null\n    // }\n    // componentDidMount(){\n    //     let id = this.props.match.params.post_id;\n    //     axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\n    //       .then(res => {\n    //         this.setState({\n    //           post: res.data\n    //         });\n    //         //console.log(res.data);\n    //       });\n    //   }\n    render () {\n        console.log(this.props);\n\n        const post = this.props.post ? (\n            <div className=\"post center title\">\n                <h4 className=\"center\">{this.props.post.title}</h4>\n                <p>{this.props.post.body}</p>\n            </div>\n        ) : (\n            <div className=\"center\">Loading Post</div>\n        )\n        return (\n            <div className=\"container center\">\n                {post}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    let id = ownProps.match.params.post_id;\n    return {\n        post: state.posts.find(post => post.id === id)\n    }\n}\n// to change state from component  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePost: (id) => { dispatch({type: 'DELETE_POST', id: id})}\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Post);"]},"metadata":{},"sourceType":"module"}